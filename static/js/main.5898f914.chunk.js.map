{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setStart","isReversed","setReverse","NONE","sortType","setSortType","goods","visibleGoods","sort","a","b","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA+BE,IAAME,EAAU,WACrB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAuBMC,EAnDR,SACEA,EACAF,EACAH,GAEA,IAAMM,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQN,GACN,KAAKT,EAASgB,QACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKf,EAASkB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAINb,EACHM,EAAaQ,UACbR,EA6BUS,CAAkBpB,EAAiBQ,EAAUH,GAE3D,OACE,qBAAKgB,UAAU,kCAAf,SACGlB,EAEG,qCACE,wBACEmB,KAAK,SACLC,QA1BW,WACrBd,EAAYV,EAASgB,UA0BXM,UAAU,yBAHZ,iCAQA,wBACEC,KAAK,SACLC,QA9BS,WACnBd,EAAYV,EAASkB,SA8BXI,UAAU,yBAHZ,4BAQA,wBACEC,KAAK,SACLC,QAlCQ,WAClBjB,GAAW,SAAAkB,GAAI,OAAKA,MAkCVH,UAAU,yBAHZ,qBAQA,wBACEC,KAAK,SACLC,QAtCM,WAChBjB,GAAW,GACXG,EAAYV,EAASQ,OAqCXc,UAAU,mBAHZ,mBAQA,oBAAIA,UAAU,QAAd,SACGX,EAAMe,KAAI,SAAAC,GACT,OACE,oBAAeL,UAAU,cAAzB,SAAwCK,GAA/BA,WAOjB,wBACEJ,KAAK,SACLC,QAxEW,WACnBnB,GAAS,IAwEDiB,UAAU,oBAHZ,sBCxHVM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5898f914.chunk.js","sourcesContent":["import { useState, FC } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\nexport const App: FC = () => {\n  const [isStarted, setStart] = useState(false);\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const startWorking = () => {\n    setStart(true);\n  };\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverseList = () => {\n    setReverse(prev => !prev);\n  };\n\n  const resetList = () => {\n    setReverse(false);\n    setSortType(SortType.NONE);\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"App block notification is-light\">\n      {isStarted\n        ? (\n          <>\n            <button\n              type=\"button\"\n              onClick={sortByAlphabet}\n              className=\"button is-primary mr-3\"\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={sortByLength}\n              className=\"button is-primary mr-3\"\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={reverseList}\n              className=\"button is-primary mr-3\"\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={resetList}\n              className=\"button is-danger\"\n            >\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {goods.map(good => {\n                return (\n                  <li key={good} className=\"Goods__item\">{good}</li>\n                );\n              })}\n            </ul>\n          </>\n        )\n        : (\n          <button\n            type=\"button\"\n            onClick={startWorking}\n            className=\"button is-success\"\n          >\n            Start\n          </button>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}